name: CI Pipeline

on:
  push:
    branches: [ main, develop, feat/add-github-pipeline]
  pull_request:
    branches: [ main, develop, feat/add-github-pipeline]

jobs:
  install:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: NODE_ENV=development npm ci
      - run: ls node_modules | grep vitest
      - name: Upload node_modules as artifact
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: node_modules/

  lint:
    runs-on: ubuntu-latest
    needs: install

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: node_modules

      - run: ls

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: install

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: node_modules

      - run: ls
      - name: Run unit tests
        run: npm run test:unit

  e2e-tests:
    runs-on: ubuntu-latest
    needs: install

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: node_modules

      - run: ls
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run end-to-end tests
        run: npm run test:e2e

      - name: Save end-to-end tests report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
